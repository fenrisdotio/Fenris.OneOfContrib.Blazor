<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <OutputType>Library</OutputType>

    <Title>OneOf.Extensions.Blazor</Title>
    <Authors>fenris.io</Authors>
    <Description>
A collection of Blazor components for dealing with OneOf types in your Blazor project.

Instead of writing a switch statement to handle the different cases of a OneOf type, you can use these components to render the correct component for the case.

Example:

&lt;OneOfSwitch2 Value="myOneOfWithTwoTypeParameters"&gt;
  &lt;T0Template&gt;
    &lt;p&gt;I am of type T0 and my value is @context!.&lt;/p&gt;
  &lt;/T0Template&gt;
  &lt;T1Template&gt;
    &lt;p&gt;I am of type T1 and my value is @context!.&lt;/p&gt;
  &lt;/T1Template&gt;
&lt;/OneOfSwitch2&gt;
    </Description>
    <PackageProjectUrl>https://github.com/fenrisdotio/OneOf.Extensions.Blazor</PackageProjectUrl>
    <PackageTags>oneof extensions blazor components switch</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageReleaseNotes>https://github.com/fenrisdotio/OneOf.Extensions.Blazor/blob/main/LICENSE.txt</PackageReleaseNotes>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="8.0.1" />
    <PackageReference Include="OneOf" Version="3.0.263" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
  </ItemGroup>

  <ItemGroup>
      <None Include="../../README.md" Pack="true" PackagePath="/" />
      <None Include="../../LICENSE.txt" Pack="true" PackagePath="/" />
  </ItemGroup>

</Project>
