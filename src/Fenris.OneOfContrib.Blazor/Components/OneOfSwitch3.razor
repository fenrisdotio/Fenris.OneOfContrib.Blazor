@typeparam T0;
@typeparam T1;
@using global::OneOf
@typeparam T2;

@{
    if (Value.IsT0)
    {
        @T0Template(Value.AsT0)
    }
    else if (Value.IsT1)
    {
        @T1Template(Value.AsT1)
    }
    else
    {
        @T2Template(Value.AsT2)
    }
}

@code {
    [Parameter]
    [EditorRequired]
    public OneOf<T0, T1, T2> Value { get; set; }

    [Parameter]
    [EditorRequired]
    public RenderFragment<T0> T0Template { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public RenderFragment<T1> T1Template { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public RenderFragment<T2> T2Template { get; set; } = default!;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        ArgumentNullException.ThrowIfNull(T0Template);
        ArgumentNullException.ThrowIfNull(T1Template);
        ArgumentNullException.ThrowIfNull(T2Template);
    }
}
